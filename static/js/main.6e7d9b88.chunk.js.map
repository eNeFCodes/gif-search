{"version":3,"sources":["Components/SearchForm.js","Components/Gif.js","Components/NoGifs.js","Components/GifList.js","Components/Context/index.js","Components/App.js","index.js"],"names":["SearchForm","props","useState","searchText","setSearchText","className","onSubmit","e","preventDefault","onSearch","currentTarget","reset","htmlFor","type","onChange","target","value","name","placeholder","id","Gif","src","url","alt","NoGifs","GifList","gifs","results","data","length","map","gif","images","fixed_height","key","EnvironmentContext","React","createContext","EnvironmentProvider","Provider","API_KEY","children","App","setData","query","setQuery","isLoading","setIsLoading","useContext","useEffect","axios","then","response","catch","error","console","log","finally","ReactDOM","render","document","getElementById"],"mappings":"oPA0BeA,MAxBf,SAAoBC,GAClB,MAAoCC,mBAAS,IAAG,mBAAzCC,EAAU,KAAEC,EAAa,KAUhC,OACE,0BAAMC,UAAU,cAAcC,SAPX,SAACC,GACpBA,EAAEC,iBACFP,EAAMQ,SAASN,GACfI,EAAEG,cAAcC,UAKd,2BAAON,UAAU,YAAYO,QAAQ,UAAQ,UAC7C,2BAAOC,KAAK,SACVC,SAZiB,SAACP,GAAC,OAAKH,EAAcG,EAAEQ,OAAOC,QAa/CC,KAAK,SACLC,YAAY,cAEd,4BAAQL,KAAK,SAASM,GAAG,SAASd,UAAU,iBAAgB,uBAAGA,UAAU,6BAA2B,aCb3Fe,EANH,SAAAnB,GAAK,OACf,wBAAII,UAAU,YACZ,yBAAKgB,IAAKpB,EAAMqB,IAAKC,IAAI,OCKdC,EAPA,SAAAvB,GAAK,OAClB,wBAAII,UAAU,WACZ,uBAAGA,UAAU,2BAAyB,+BACtC,mECgBWoB,EAjBC,SAAAxB,GAEd,IACIyB,EADEC,EAAU1B,EAAM2B,KAQtB,OALEF,EADEC,EAAQE,OACHF,EAAQG,KAAI,SAAAC,GAAG,OAAI,kBAAC,EAAG,CAACT,IAAKS,EAAIC,OAAOC,aAAaX,IAAKY,IAAKH,EAAIZ,QAEnE,kBAAC,EAAM,MAId,wBAAId,UAAU,YACXqB,ICdMS,EAAqBC,IAAMC,gBAE3BC,EAAsB,SAACrC,GAKhC,OACI,kBAACkC,EAAmBI,SAAQ,CAACvB,MALlB,CACXwB,QAAS,qCAKJvC,EAAMwC,WCkCJC,MApCf,WACE,MAAwBxC,mBAAS,IAAG,mBAA7B0B,EAAI,KAAEe,EAAO,KACpB,EAA0BzC,mBAAS,QAAO,mBAAnC0C,EAAK,KAAEC,EAAQ,KACtB,EAAkC3C,oBAAS,GAAK,mBAAzC4C,EAAS,KAAEC,EAAY,KAItBP,GAAYQ,qBAAWb,IAAuB,IAA9CK,QAUR,OARAS,qBAAU,WAERC,IAAM,0CAAD,OAA2CN,EAAK,6BAAqBJ,IACvEW,MAAK,SAAAC,GAAQ,OAAIT,EAAQS,EAASxB,KAAKA,SACvCyB,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,kCAAmCF,MAC9DG,SAAQ,kBAAMV,GAAa,QAC7B,CAACH,IAGF,oCACE,yBAAKvC,UAAU,eACb,yBAAKA,UAAU,SACb,wBAAIA,UAAU,cAAY,aAC1B,kBAAC,EAAU,CAACI,SAjBE,SAACO,GAAK,OAAK6B,EAAS7B,QAoBtC,yBAAKX,UAAU,gBAEXyC,EACI,yCACA,kBAAC,EAAO,CAAClB,KAAMA,OCjC7B8B,IAASC,OACP,kBAAC,EAAmB,KAClB,kBAAC,EAAG,OAENC,SAASC,eAAe,W","file":"static/js/main.6e7d9b88.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction SearchForm(props) {\n  const [searchText, setSearchText] = useState('');\n\n  const onSearchChange = (e) => setSearchText(e.target.value);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onSearch(searchText);\n    e.currentTarget.reset();\n  }\n\n  return (\n    <form className=\"search-form\" onSubmit={handleSubmit}>\n      <label className=\"is-hidden\" htmlFor=\"search\">Search</label>\n      <input type=\"search\"\n        onChange={onSearchChange}\n        name=\"search\"\n        placeholder=\"Search...\"\n      />\n      <button type=\"submit\" id=\"submit\" className=\"search-button\"><i className=\"material-icons icn-search\">search</i></button>\n    </form>\n  );\n}\n\nexport default SearchForm;","import React from 'react';\n\nconst Gif = props => (\n  <li className=\"gif-wrap\">\n    <img src={props.url} alt=\"\"/>\n  </li>\n);\n\nexport default Gif;","import React from 'react';\n\nconst NoGifs = props => (\n  <li className='no-gifs'>\n    <i className=\"material-icons icon-gif\">sentiment_very_dissatisfied</i>\n    <h3>Sorry, no GIFs match your search.</h3>\n  </li>\n);\n\nexport default NoGifs;","import React from 'react';\nimport Gif from './Gif';\nimport NoGifs from './NoGifs';\n\nconst GifList = props => { \n  \n  const results = props.data;\n  let gifs;\n  if (results.length) {\n    gifs = results.map(gif => <Gif url={gif.images.fixed_height.url} key={gif.id} />);    \n  } else {\n    gifs = <NoGifs />\n  }\n\n  return(\n    <ul className=\"gif-list\">\n      {gifs}\n    </ul> \n  );\n}\n\nexport default GifList;\n","import React from \"react\";\n\nexport const EnvironmentContext = React.createContext();\n\nexport const EnvironmentProvider = (props) => {\n    const config = {\n        API_KEY: 'Z2yj1zlW53iWFjqS3kvp4m9nLSJhyvd6',\n    };\n\n    return (\n        <EnvironmentContext.Provider value={config}>\n            {props.children}\n        </EnvironmentContext.Provider>\n    );\n}","import React, { useState, useEffect, useContext } from 'react'\nimport '../App.css';\nimport axios from 'axios';\n\nimport SearchForm from './SearchForm';\nimport GifList from './GifList';\n\nimport { EnvironmentContext } from './Context';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [query, setQuery] = useState('code');\n  const [isLoading, setIsLoading] = useState(true);\n\n  const performSearch = (value) => setQuery(value);\n\n  const { API_KEY } = useContext(EnvironmentContext) || '';\n\n  useEffect(() => {\n    // Be sure to add your API key\n    axios(`https://api.giphy.com/v1/gifs/search?q=${query}&limit=24&api_key=${API_KEY}`)\n      .then(response => setData(response.data.data))\n      .catch(error => console.log('Error fetching and parsing data', error))\n      .finally(() => setIsLoading(false));\n  }, [query]);\n\n  return (\n    <>\n      <div className=\"main-header\">\n        <div className=\"inner\">\n          <h1 className=\"main-title\">GifSearch</h1>\n          <SearchForm onSearch={performSearch} />\n        </div>\n      </div>\n      <div className=\"main-content\">\n        {\n          isLoading\n            ? <p>Loading...</p>\n            : <GifList data={data} />\n        }\n      </div>\n    </>\n  );\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport { EnvironmentProvider } from './Components/Context';\n\nReactDOM.render(\n  <EnvironmentProvider>\n    <App />\n  </EnvironmentProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}